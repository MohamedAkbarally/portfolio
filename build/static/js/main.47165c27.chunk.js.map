{"version":3,"sources":["images/CertificateR.svg","images/CertificateB.svg","images/CertificateG.svg","components/common/NavBar.js","components/common/ProjectCard.js","components/common/ProjectCardSkeleton.js","client.js","components/layout/Projects.js","components/common/DevTag.js","components/common/Block.js","components/layout/Body.js","components/layout/Project.js","components/layout/AboutMe.js","components/layout/Contact.js","components/common/CertificateDialog.js","components/common/Certificate.js","components/common/CertificateSkeleton.js","components/layout/CV.js","App.js","serviceWorker.js","index.js","images/ProfilePicture.png"],"names":["module","exports","useStyles","makeStyles","theme","root","display","image","marginTop","drawer","breakpoints","up","width","flexShrink","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ButtonAppBar","down","title","paddingRight","appBar","backgroundColor","profile","textAlign","icons","selectedItem","withRouter","props","pathname","location","container","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerClose","mobileAppBar","className","AppBar","color","elevation","position","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","src","ProfilePicture","alt","Divider","List","map","text","index","key","ListItem","button","i","e","history","push","handleClick","selected","ListItemIcon","ListItemText","primary","isProject","useLocation","includes","CssBaseline","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","card","Width","borderRadius","cardButton","right","bottom","imageBG","paddingTop","paddingBottom","CardContent","paddingLeft","minHeight","mainText","fontWeight","subText","fontSize","ProjectCard","slug","description","Image","length","url","Fragment","Grid","item","xs","sm","md","lg","xl","to","Card","CardActionArea","style","background","align","component","lines","suffix","height","Paper","Skeleton","animation","sanityClient","projectId","dataset","styles","grid","float","Projects","projects","setProjects","useEffect","fetch","then","data","catch","console","error","gutterBottom","project","mainImage","asset","current","Chips","name","icon","charAt","toUpperCase","substring","alignItems","flexWrap","marginBottom","justifyContent","urlFor","source","urlBuilder","serializer","types","node","maxWidth","margin","imagec","picture","caption","tool","Block","value","serializers","blocks","scrollpos","Body","body","setScrollDown","buttons","btn","Box","p","Button","disableElevation","target","href","split","size","id","onScroll","document","getElementById","scrollTop","maxHeight","overflow","Container","defaultProps","modal","palette","border","boxShadow","shadows","marginLeft","loading","left","top","transform","CircularProgress","Project","useParams","setProject","buttonlink","stlye","AboutMe","about","setAbout","phoneCard","phoneText","verticalAlign","phoneIcon","Snackbar","email","message","values","setValues","setOpen","open2","setOpen2","handleClose","event","reason","handleChange","prop","onSubmit","method","headers","Object","keys","encodeURIComponent","join","preventDefault","FormControl","fullWidth","InputLabel","htmlFor","Input","required","type","minlength","onChange","multiline","rows","textDecoration","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","DialogTitle","withStyles","closeButton","grey","children","other","disableTypography","DialogContent","MuiDialogContent","MuiDialogActions","CustomizedDialogs","Dialog","aria-labelledby","dividers","desc","cert","cursor","filter","div","Certificate","Cert","CertR","CertY","CertB","CertificateSkeleton","CV","certificates","setCertificates","log","flexDirection","m","App","isNav","exact","path","Contact","from","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47165c27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CertificateR.e22d337f.svg\";","module.exports = __webpack_public_path__ + \"static/media/CertificateB.222d936b.svg\";","module.exports = __webpack_public_path__ + \"static/media/CertificateG.eec7aadb.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ProfilePicture from \"../../images/ProfilePicture.png\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { withRouter } from \"react-router-dom\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport { useLocation } from \"react-router-dom\";\n\nconst drawerWidth = 280;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  image: {\n    marginTop: \"30px\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  ButtonAppBar: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"inline\",\n    },\n  },\n\n  title: {\n    flexGrow: 1,\n    paddingRight: \"30pt\",\n  },\n  appBar: {\n    backgroundColor: \"#eee\",\n  },\n  profile: {\n    textAlign: \"center\",\n  },\n}));\n\nconst icons = [\n  <AccountCircleIcon />,\n  <FolderIcon />,\n  <AssignmentIcon />,\n  <MailIcon />,\n];\n\nvar selectedItem = [0, 1, 0, 0];\n\nfunction NavBar(props) {\n  const { pathname } = props.location;\n\n  if (pathname === \"/about\") {\n    selectedItem = [1, 0, 0, 0];\n  }\n\n  if (pathname === \"/contact\") {\n    selectedItem = [0, 0, 0, 1];\n  }\n\n  if (pathname === \"/cv\") {\n    selectedItem = [0, 0, 1, 0];\n  }\n  const { container } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleDrawerClose = () => {\n    setMobileOpen(false);\n  };\n\n  const handleClick = (i, e) => {\n    selectedItem = [0, 0, 0, 0];\n    if (selectedItem[i] === 1) {\n      handleDrawerClose();\n      return;\n    }\n    selectedItem[i] = 1;\n    if (i === 0) {\n      props.history.push(\"/about\");\n      handleDrawerClose();\n      return;\n    }\n    if (i === 1) {\n      props.history.push(\"/projects\");\n      handleDrawerClose();\n      return;\n    }\n    if (i === 2) {\n      props.history.push(\"/cv\");\n      handleDrawerClose();\n      return;\n    }\n    if (i === 3) {\n      props.history.push(\"/contact\");\n      handleDrawerClose();\n      return;\n    }\n    handleDrawerClose();\n  };\n\n  const mobileAppBar = (\n    <div className={classes.ButtonAppBar}>\n      <AppBar color=\"transparent\" elevation={0} position=\"static\">\n        <Toolbar className={classes.appBar}>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={handleDrawerToggle}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Mohamed's Portfolio\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n\n  const drawer = (\n    <div>\n      <div className={classes.profile}>\n        <img\n          src={ProfilePicture}\n          width=\"180px\"\n          className={classes.image}\n          alt=\"Profile\"\n        />\n        <Typography variant=\"h6\">Mohamed Akbarally</Typography>\n\n        <Typography>mohamed.akbarally@gmail.com</Typography>\n      </div>\n      <br />\n      <Divider />\n      <List>\n        {[\"About Me\", \"Projects\", \"CV\", \"Contact\"].map((text, index) => (\n          <div key={index}>\n            <ListItem\n              button\n              key={text}\n              onClick={() => handleClick(index)}\n              selected={selectedItem[index]}\n            >\n              <ListItemIcon>{icons[index]}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          </div>\n        ))}\n      </List>\n    </div>\n  );\n\n  const location = useLocation();\n  const isProject = location.pathname.includes(\"/project/\");\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      {!isProject && mobileAppBar}\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerClose}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            open\n            variant=\"permanent\"\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  container: PropTypes.any,\n};\n\nexport default withRouter(NavBar);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Card, CardActionArea } from \"@material-ui/core\";\nimport Ellipsis from \"react-ellipsis-pjs\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    Width: 345,\n    borderRadius: \"7px\",\n    position: \"relative\",\n  },\n  cardButton: {\n    position: \"absolute\",\n    right: \"10px\",\n    bottom: \"5px\",\n  },\n  imageBG: {\n    paddingTop: \"25px\",\n    paddingBottom: \"20px\",\n    borderRadius: \"7px 7px 0px 0px\",\n  },\n  CardContent: {\n    paddingTop: \"10px\",\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    minHeight: 130,\n  },\n  mainText: {\n    fontWeight: 600,\n  },\n  subText: {\n    color: \"#484848\",\n    fontSize: \"0.9em\",\n  },\n}));\n\nexport default function ProjectCard({\n  title,\n  image,\n  slug,\n  color,\n  description,\n}) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  var url_full = Image.length != 0 ? Image[0].url : \"\";\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\n        <Link className=\"text-link\" to={\"/project/\" + slug}>\n          <Card className={classes.card} elevation={0} variant=\"outlined\">\n            <CardActionArea>\n              <div className={classes.imageBG} style={{ background: color }}>\n                <img src={image} alt={title} width=\"130px\"></img>\n              </div>\n              <div className={classes.CardContent}>\n                <Typography\n                  align=\"left\"\n                  variant=\"h6\"\n                  className={classes.mainText}\n                >\n                  {title}\n                </Typography>\n                <Typography\n                  align=\"left\"\n                  variant=\"body1\"\n                  component=\"p\"\n                  className={classes.subText}\n                >\n                  <Ellipsis text={description} lines={3} suffix=\"...\" />\n                </Typography>\n              </div>\n            </CardActionArea>\n          </Card>\n        </Link>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Paper } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    Width: 345,\n    borderRadius: \"7px\",\n    position: \"relative\",\n  },\n  cardButton: {\n    position: \"absolute\",\n    right: \"10px\",\n    bottom: \"5px\",\n  },\n  imageBG: {\n    paddingTop: \"25px\",\n    paddingBottom: \"20px\",\n    borderRadius: \"7px 7px 0px 0px\",\n  },\n  CardContent: {\n    paddingTop: \"10px\",\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    height: 140,\n  },\n  mainText: {\n    fontWeight: 600,\n  },\n  subText: {\n    color: \"#484848\",\n    fontSize: \"0.9em\",\n  },\n}));\n\nexport default function ProjectCard(props) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\n        <Paper className={classes.card} elevation={0} variant=\"outlined\">\n          <Skeleton animation=\"wave\" variant=\"rect\" height={130} />\n          <div className={classes.CardContent}>\n            <Typography align=\"left\" variant=\"h6\" className={classes.mainText}>\n              <Skeleton animation=\"wave\" />\n            </Typography>\n            <Typography\n              align=\"left\"\n              variant=\"subtitle2\"\n              component=\"p\"\n              className={classes.subText}\n            >\n              <Skeleton animation=\"wave\" />\n              <Skeleton animation=\"wave\" />\n\n              <Skeleton animation=\"wave\" />\n            </Typography>\n          </div>\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import sanityClient from \"@sanity/client\";\n\nexport default sanityClient({\n    projectId: \"ekj8ng77\",\n    dataset: \"production\"\n})","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ProjectCard from \"../common/ProjectCard\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ProjectCardSkeleton from \"../common/ProjectCardSkeleton\";\r\nimport sanityClient from \"../../client\";\r\n\r\nconst styles = {\r\n  grid: { float: \"middle\", textAlign: \"center\" },\r\n  title: { textAlign: \"left\" },\r\n};\r\n\r\nexport default function Projects({ projects, setProjects }) {\r\n  useEffect(() => {\r\n    if (projects == null) {\r\n      sanityClient\r\n        .fetch(\r\n          `*[_type == \"post\"]{\r\n      title,\r\n      slug,\r\n      color,\r\n      description,\r\n      mainImage{\r\n        asset->{\r\n        _id,\r\n        url\r\n      }\r\n    }\r\n  }`\r\n        )\r\n        .then((data) => setProjects(data))\r\n        .catch(console.error);\r\n    }\r\n  }, []);\r\n\r\n  return projects != null ? (\r\n    <React.Fragment>\r\n      <Typography style={styles.title} variant=\"h6\" gutterBottom>\r\n        Programming\r\n      </Typography>\r\n      <Grid container style={styles.grid} spacing={3}>\r\n        {projects.map((project, index) => {\r\n          return (\r\n            <ProjectCard\r\n              key={index}\r\n              image={project.mainImage.asset.url}\r\n              slug={project.slug.current}\r\n              title={project.title}\r\n              color={project.color}\r\n              description={project.description}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n    </React.Fragment>\r\n  ) : (\r\n    <React.Fragment>\r\n      <Typography style={styles.title} variant=\"h6\" gutterBottom>\r\n        Programming\r\n      </Typography>\r\n      <Grid container style={styles.grid} spacing={3}>\r\n        <ProjectCardSkeleton></ProjectCardSkeleton>\r\n        <ProjectCardSkeleton></ProjectCardSkeleton>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Icon from \"@material-ui/core/Icon\";\n\nexport default function Chips(props) {\n  var name = props.icon;\n  name = name.charAt(0).toUpperCase() + name.substring(1);\n\n  return (\n    <div style={{ display: \"inline-block\" }}>\n      <div\n        style={{\n          backgroundColor: \"#ccc\",\n          borderRadius: 4,\n          fontSize: \"1.1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n          padding: 4,\n          paddingRight: 12,\n          marginRight: 8,\n          marginBottom: 8,\n          marginTop: 8,\n          paddingLeft: 8,\n          justifyContent: \"center\",\n        }}\n      >\n        <i style={{ marginRight: 4 }} className={`devicon-${props.icon}`}></i>\n\n        {props.name ? props.name : name}\n      </div>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport PortableText from \"@sanity/block-content-to-react\";\nimport urlBuilder from \"@sanity/image-url\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport DevTag from \"./DevTag\";\n\nconst urlFor = (source) =>\n  urlBuilder({ projectId: \"ekj8ng77\", dataset: \"production\" }).image(source);\n\nconst serializer = {\n  types: {\n    image: (props) => (\n      <Fragment>\n        <img\n          src={urlFor(props.node.asset).url()}\n          style={{\n            height: 400,\n            maxWidth: \"100%\",\n            margin: \"auto\",\n            display: \"block\",\n          }}\n          alt={props.node.alt}\n        />\n      </Fragment>\n    ),\n    imagec: (props) => (\n      <Fragment>\n        <img\n          src={urlFor(props.node.picture.asset).url()}\n          style={{\n            height: 400,\n            maxWidth: \"100%\",\n            margin: \"auto\",\n            display: \"block\",\n            marginBottom: 4,\n          }}\n          alt={props.node.alt}\n        />\n        <Typography\n          variant=\"caption\"\n          display=\"block\"\n          style={{ textAlign: \"center\" }}\n          gutterBottom\n        >\n          {props.node.caption}\n        </Typography>\n      </Fragment>\n    ),\n    tool: (props) => (\n      <DevTag icon={props.node.icon} name={props.node.name}></DevTag>\n    ),\n  },\n};\n\nexport default function Block({ value }) {\n  return <PortableText serializers={serializer} blocks={value} />;\n}\n","import { Box, Button, Container, Slide, Zoom } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nimport Block from '../common/Block';\n\nlet scrollpos = 0;\nexport default function Body({ body, color, button }) {\n  const [scrollDown, setScrollDown] = useState(true);\n  const divScroll = (e) => {\n    var position = document.getElementById('scrollablediv').scrollTop;\n    setScrollDown(scrollpos - position > 0);\n    scrollpos = position;\n  };\n\n  const buttons = button.map((btn) => {\n    return (\n      <Box flexGrow={1} p={1}>\n        <Button\n          variant=\"contained\"\n          disableElevation\n          target=\"_blank\"\n          href={btn.split(',')[1]}\n          size=\"large\"\n          style={{\n            width: '100%',\n          }}\n        >\n          {btn.split(',')[0]}\n        </Button>\n      </Box>\n    );\n  });\n\n  return (\n    <div\n      id=\"scrollablediv\"\n      onScroll={divScroll}\n      style={{\n        maxHeight: 'calc(100vh - 70px)',\n        minHeight: 'calc(100vh - 70px)',\n        backgroundColor: '#fff',\n        overflow: 'scroll',\n      }}\n    >\n      <Container style={{ marginTop: 24 }}>\n        <Block value={body}></Block>\n        <div style={{ width: '100%' }}>\n          <Box display=\"flex\" alignItems=\"center\" p={0}>\n            {buttons}\n          </Box>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nBody.defaultProps = {\n  button: [],\n};\n","import {\n  AppBar,\n  Button,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  IconButton,\n  makeStyles,\n  Slide,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport sanityClient from \"../../client\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Body from \"./Body\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 20,\n  },\n  paper: {\n    margin: \"auto\",\n\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 2, 0),\n  },\n  toolbar: {\n    marginTop: -24,\n    marginLeft: -24,\n    marginRight: -24,\n    textAlign: \"left\",\n  },\n  menuButton: {\n    color: \"#fff\",\n    marginRight: 16,\n  },\n  icon: {\n    marginRight: 10,\n  },\n}));\n\nconst loading = (\n  <div\n    style={{\n      position: \"absolute\",\n      left: \"50%\",\n      top: \"50vh\",\n      transform: \"translate(-50%,-50%)\",\n    }}\n  >\n    <CircularProgress color=\"default\" style={{ color: \"#888\" }} />\n  </div>\n);\n\nexport default function Project(props) {\n  let { slug } = useParams();\n  const { project, setProject } = props;\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (project == null || project[0].slug.current != slug) {\n      sanityClient\n        .fetch(`*[_type == \"post\" && slug.current == \"${slug}\"]`)\n        .then((data) => setProject(data))\n        .catch(console.error);\n    }\n  }, []);\n\n  let color = \"#ccc\";\n  let title = \"N/A\";\n  let body = [];\n  let button = [];\n\n  if (project != null && project[0].slug.current == slug) {\n    color = project[0].color;\n    title = project[0].title;\n    body = project[0].body;\n    button = project[0].buttonlink;\n  }\n\n  return (\n    <div\n      stlye={{\n        backgroundColor: \"#fff\",\n      }}\n    >\n      <div className={classes.toolbar}>\n        <AppBar\n          elevation={0}\n          style={{ backgroundColor: color, position: \"sticky\" }}\n        >\n          <Toolbar>\n            <Link to=\"/projects\">\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <ArrowBackIcon />\n              </IconButton>\n            </Link>\n            <Typography variant=\"h6\" className={classes.title}>\n              {title}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <div style={{ marginRight: -24, marginLeft: -24, marginBottom: -24 }}>\n        {project == null || project[0].slug.current != slug ? (\n          loading\n        ) : (\n          <Body body={body} color={color} button={button} />\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport sanityClient from \"../../client\";\nimport { Fragment } from \"react\";\nimport Block from \"../common/Block\";\n\nconst styles = {\n  margin: {\n    marginTop: 8,\n    marginBottom: 8,\n\n    maxWidth: \"600pt\",\n  },\n  card: {\n    marginTop: \"0px\",\n    padding: 24,\n    paddingTop: 24,\n    paddingRight: 24,\n    paddingLeft: 24,\n    borderRadius: \"7px\",\n\n    float: \"middle\",\n    textAlign: \"left\",\n  },\n};\n\nvar loading = (\n  <React.Fragment>\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n  </React.Fragment>\n);\n\nexport default function AboutMe({ about, setAbout }) {\n  useEffect(() => {\n    if (about == null) {\n      sanityClient\n        .fetch(`*[_type == \"about\"]`)\n        .then((data) => setAbout(data[0].body))\n        .catch(console.error);\n    }\n  }, []);\n\n  return (\n    <div>\n      <Paper style={styles.card} elevation=\"0\" variant=\"outlined\">\n        <Typography variant=\"h6\">About me</Typography>\n        {about ? \"\" : loading}\n        <Block value={about} />\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  card: {\n    marginTop: \"0px\",\n    padding: theme.spacing(3),\n\n    borderRadius: \"7px\",\n\n    float: \"middle\",\n    textAlign: \"left\",\n  },\n  phoneCard: {\n    marginTop: theme.spacing(1),\n\n    float: \"middle\",\n    textAlign: \"center\",\n    padding: theme.spacing(3),\n  },\n  phoneText: {\n    verticalAlign: \"middle\",\n  },\n  phoneIcon: {\n    verticalAlign: \"middle\",\n    marginBottom: \"3px\",\n    marginRight: \"10px\",\n  },\n  Snackbar: {\n    maxWidth: \"400px\",\n\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: \"0px\",\n      marginRight: \"15px\",\n\n      maxWidth: \"100%\",\n    },\n\n    float: \"middle\",\n    width: \"100%\",\n  },\n}));\n\nconst encode = (data) => {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n    .join(\"&\");\n};\n\nexport default function AboutMe() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen2(false);\n    setOpen(false);\n  };\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    fetch(\"/contact\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: encode({ \"form-name\": \"contact\", ...values }),\n    })\n      .then(() => setOpen(true))\n      .catch((error) => setOpen2(true));\n\n    e.preventDefault();\n  };\n\n  return (\n    <div>\n      <Paper className={classes.card} elevation=\"0\" variant=\"outlined\">\n        <Typography variant=\"h6\">Email Contact Form</Typography>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs=\"12\" md=\"6\">\n              <FormControl fullWidth className={classes.margin}>\n                <InputLabel htmlFor=\"standard-adornment-amount\">\n                  Name\n                </InputLabel>\n                <Input\n                  required\n                  type=\"text\"\n                  minlength=\"3\"\n                  name=\"name\"\n                  value={values.name}\n                  onChange={handleChange(\"name\")}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs=\"12\" md=\"6\">\n              <FormControl fullWidth className={classes.margin}>\n                <InputLabel htmlFor=\"standard-adornment-amount\">\n                  Email Address\n                </InputLabel>\n                <Input\n                  required\n                  type=\"email\"\n                  name=\"email\"\n                  value={values.email}\n                  onChange={handleChange(\"email\")}\n                />\n              </FormControl>\n            </Grid>\n          </Grid>\n          <FormControl fullWidth className={classes.margin}>\n            <InputLabel htmlFor=\"standard-adornment-amount\">Message</InputLabel>\n            <Input\n              name=\"message\"\n              required\n              value={values.message}\n              multiline\n              rows=\"4\"\n              onChange={handleChange(\"message\")}\n            />\n          </FormControl>\n          <FormControl fullWidth className={classes.margin}>\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              disableElevation\n              variant=\"contained\"\n            >\n              SEND\n            </Button>\n          </FormControl>\n        </form>\n      </Paper>\n      <Paper className={classes.phoneCard} elevation=\"0\" variant=\"outlined\">\n        <Typography className={classes.phoneText} variant=\"h6\">\n          <PhoneIcon className={classes.phoneIcon}></PhoneIcon>\n          <a\n            style={{ textDecoration: \"inherit\", color: \"inherit\" }}\n            href=\"tel:+61481994955\"\n          >\n            +61 (481) 994 955\n          </a>\n        </Typography>\n      </Paper>\n      <Snackbar\n        className={classes.Snackbar}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n      >\n        <Alert\n          className={classes.Snackbar}\n          onClose={handleClose}\n          severity=\"success\"\n          variant=\"filled\"\n        >\n          Email Sent Successfully!\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        className={classes.Snackbar}\n        open={open2}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n      >\n        <Alert\n          className={classes.Snackbar}\n          onClose={handleClose}\n          severity=\"error\"\n          variant=\"filled\"\n        >\n          Error Sending Email!\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  return (\n    <div>\n      <Dialog\n        aria-labelledby=\"customized-dialog-title\"\n        open={props.open}\n        onClose={props.handleClose}\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          style={{ marginRight: 50 }}\n          onClose={props.handleClose}\n        >\n          {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>{props.desc}</Typography>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport CertR from \"../../images/CertificateR.svg\";\nimport CertB from \"../../images/CertificateB.svg\";\nimport CertY from \"../../images/CertificateG.svg\";\nimport Dialog from \"./CertificateDialog\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  cert: {\n    width: 100,\n    cursor: \"pointer\",\n    \"&:hover\": {\n      filter: \"brightness(90%)\",\n    },\n  },\n  div: { width: 150, display: \"block\" },\n}));\n\nexport default function Certificate(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  var Cert;\n  if (props.type === \"Work\") Cert = CertR;\n  if (props.type === \"Online\") Cert = CertY;\n  if (props.type === \"Formal\") Cert = CertB;\n\n  return (\n    <div className={classes.div}>\n      <img\n        src={Cert}\n        alt=\"certificate\"\n        className={classes.cert}\n        style={{ height: 100 }}\n        onClick={() => setOpen(true)}\n      ></img>\n      <br></br>\n      <Typography className={classes.title} variant=\"body\" gutterBottom>\n        {props.title}\n      </Typography>\n      <Dialog\n        open={open}\n        handleClose={handleClose}\n        title={props.title}\n        desc={props.desc}\n        buttons={props.buttons}\n      ></Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  cert: {\n    width: 100,\n    cursor: \"pointer\",\n  },\n  div: { width: 150, display: \"block\" },\n}));\n\nexport default function CertificateSkeleton() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.div}>\n      <Skeleton\n        style={{ margin: \"auto\", display: \"block\" }}\n        variant=\"rect\"\n        width={100}\n        height={100}\n      ></Skeleton>\n      <br></br>\n      <Typography className={classes.title} variant=\"body\" gutterBottom>\n        <Skeleton></Skeleton>\n      </Typography>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Certificate from '../common/Certificate';\nimport CertificateSkeleton from '../common/CertificateSkeleton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport sanityClient from '../../client';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: { float: 'middle', textAlign: 'center' },\n  title: { textAlign: 'left' },\n}));\n\nexport default function CV({ certificates, setCertificates }) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (certificates == null) {\n      sanityClient\n        .fetch(`*[_type == \"certificate\"]`)\n        .then((data) => setCertificates(data))\n        .catch(console.error);\n    }\n    return;\n  }, []);\n\n  console.log(certificates);\n\n  return certificates ? (\n    <React.Fragment>\n      <Typography className={classes.title} variant=\"h6\" gutterBottom>\n        Work Experience\n      </Typography>\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" p={1} m={1}>\n        {certificates\n          .filter((cert) => cert.type == 'work')\n          .map((cert) => (\n            <Box p={1}>\n              <Certificate\n                key={cert.title}\n                title={cert.title}\n                desc={cert.description}\n                buttons={['hello']}\n                type=\"Work\"\n              ></Certificate>\n            </Box>\n          ))}\n      </Box>\n      <Typography className={classes.title} variant=\"h6\" gutterBottom>\n        Formal Education\n      </Typography>\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" p={1} m={1}>\n        {certificates\n          .filter((cert) => cert.type == 'formal')\n          .map((cert) => (\n            <Box p={1}>\n              <Certificate\n                key={cert.title}\n                title={cert.title}\n                desc={cert.description}\n                buttons={['hello']}\n                type=\"Formal\"\n              ></Certificate>\n            </Box>\n          ))}\n      </Box>\n      <Typography className={classes.title} variant=\"h6\" gutterBottom>\n        Online Course Cerficates\n      </Typography>\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" p={1} m={1}>\n        {certificates\n          .filter((cert) => cert.type == 'online')\n          .map((cert) => (\n            <Box p={1}>\n              <Certificate\n                key={cert.title}\n                title={cert.title}\n                desc={cert.description}\n                buttons={['hello']}\n                type=\"Online\"\n              ></Certificate>\n            </Box>\n          ))}\n      </Box>\n    </React.Fragment>\n  ) : (\n    <React.Fragment>\n      <Typography className={classes.title} variant=\"h6\" gutterBottom>\n        Work Experience\n      </Typography>\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" p={1} m={1}>\n        <Box p={1}>\n          <CertificateSkeleton></CertificateSkeleton>\n        </Box>\n        <Box p={1}>\n          <CertificateSkeleton></CertificateSkeleton>\n        </Box>\n      </Box>\n      <Typography className={classes.title} variant=\"h6\" gutterBottom>\n        Formal Education\n      </Typography>\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" p={1} m={1}>\n        <Box p={1}>\n          <CertificateSkeleton></CertificateSkeleton>\n        </Box>\n        <Box p={1}>\n          <CertificateSkeleton></CertificateSkeleton>\n        </Box>\n      </Box>\n\n      <Typography className={classes.title} variant=\"h6\" gutterBottom>\n        Online Course Cerficates\n      </Typography>\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" p={1} m={1}>\n        <Box p={1}>\n          <CertificateSkeleton></CertificateSkeleton>\n        </Box>\n        <Box p={1}>\n          <CertificateSkeleton></CertificateSkeleton>\n        </Box>\n      </Box>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/common/NavBar\";\nimport Projects from \"./components/layout/Projects\";\nimport Project from \"./components/layout/Project\";\nimport AboutMe from \"./components/layout/AboutMe\";\nimport Contact from \"./components/layout/Contact\";\nimport CV from \"./components/layout/CV\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 24,\n    position: \"relative\",\n    marginLeft: \"279px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: \"0px\",\n      marginRight: \"0px\",\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const [projects, setProjects] = useState(null);\n  const [project, setProject] = useState(null);\n  const [about, setAbout] = useState(null);\n  const [certificates, setCertificates] = useState(null);\n\n  return (\n    <Router>\n      <div>\n        <NavBar isNav={true} />\n        <div className={classes.root}>\n          <Switch>\n            <Route\n              exact\n              path=\"/projects\"\n              component={() => (\n                <Projects projects={projects} setProjects={setProjects} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/project/:slug\"\n              component={() => (\n                <Project\n                  project={project}\n                  setProject={setProject}\n                  projects={projects}\n                />\n              )}\n            />\n\n            <Route exact path=\"/contact\" component={Contact} />\n            <Route\n              exact\n              path=\"/cv\"\n              component={() => (\n                <CV\n                  certificates={certificates}\n                  setCertificates={setCertificates}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/about\"\n              component={() => <AboutMe about={about} setAbout={setAbout} />}\n            />\n            <Redirect from=\"/\" to=\"/projects\" />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ProfilePicture.24ae9b01.png\";"],"sourceRoot":""}